# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BfIq79is6bgmhXnxnL090KSpPNIWLrtT
"""

import pandas as pd

matches = pd.read_csv('/content/Dataframe_clean.csv')
champions = pd.read_csv('/content/Stats.csv')
matches.head(10)

fig = champions[champions['tag1'] == 'Fighter']
mag = champions[champions['tag1'] == 'Mage']
spp = champions[champions['tag1'] == 'Support']
mrk = champions[champions['tag1'] == 'Marksman']
tnk = champions[champions['tag1'] == 'Tank']
asn = champions[champions['tag1'] == 'Assassin']

fig_win = []
fig_lose = []
for i in range(fig.shape[0]):
    champ_key = fig.iloc[i]['key']
    wins = matches[(((matches['Player_1_pick'] == champ_key) | (matches['Player_2_pick'] == champ_key) |
                   (matches['Player_3_pick'] == champ_key) | (matches['Player_4_pick'] == champ_key) |
                   (matches['Player_5_pick'] == champ_key)) & ((matches['teamVictory'] == 100))) |
                   (((matches['Player_6_pick'] == champ_key) | (matches['Player_7_pick'] == champ_key) |
                   (matches['Player_8_pick'] == champ_key) | (matches['Player_9_pick'] == champ_key) |
                   (matches['Player_10_pick'] == champ_key)) & ((matches['teamVictory'] == 200)))]
    loses = matches[(((matches['Player_1_pick'] == champ_key) | (matches['Player_2_pick'] == champ_key) |
                   (matches['Player_3_pick'] == champ_key) | (matches['Player_4_pick'] == champ_key) |
                   (matches['Player_5_pick'] == champ_key)) & ((matches['teamVictory'] == 200))) |
                   (((matches['Player_6_pick'] == champ_key) | (matches['Player_7_pick'] == champ_key) |
                   (matches['Player_8_pick'] == champ_key) | (matches['Player_9_pick'] == champ_key) |
                   (matches['Player_10_pick'] == champ_key)) & ((matches['teamVictory'] == 100)))]
    fig_win.append(wins.shape[0])
    fig_lose.append(loses.shape[0])
fig_wr = [round(x/(x+y),3) for x,y in zip(fig_win, fig_lose)]
#fig['wins'] = fig_win
#fig['loses'] = fig_lose
fig_play = [round((x+y)/matches.shape[0], 3) for x,y in zip(fig_win, fig_lose)]
fig['playrate'] = fig_play
fig['winrate'] = fig_wr
fig = fig.set_index('key')

mag_win = []
mag_lose = []
for i in range(mag.shape[0]):
    champ_key = mag.iloc[i]['key']
    wins = matches[(((matches['Player_1_pick'] == champ_key) | (matches['Player_2_pick'] == champ_key) |
                   (matches['Player_3_pick'] == champ_key) | (matches['Player_4_pick'] == champ_key) |
                   (matches['Player_5_pick'] == champ_key)) & ((matches['teamVictory'] == 100))) |
                   (((matches['Player_6_pick'] == champ_key) | (matches['Player_7_pick'] == champ_key) |
                   (matches['Player_8_pick'] == champ_key) | (matches['Player_9_pick'] == champ_key) |
                   (matches['Player_10_pick'] == champ_key)) & ((matches['teamVictory'] == 200)))]
    loses = matches[(((matches['Player_1_pick'] == champ_key) | (matches['Player_2_pick'] == champ_key) |
                   (matches['Player_3_pick'] == champ_key) | (matches['Player_4_pick'] == champ_key) |
                   (matches['Player_5_pick'] == champ_key)) & ((matches['teamVictory'] == 200))) |
                   (((matches['Player_6_pick'] == champ_key) | (matches['Player_7_pick'] == champ_key) |
                   (matches['Player_8_pick'] == champ_key) | (matches['Player_9_pick'] == champ_key) |
                   (matches['Player_10_pick'] == champ_key)) & ((matches['teamVictory'] == 100)))]
    mag_win.append(wins.shape[0])
    mag_lose.append(loses.shape[0])
mag_wr = [round(x/(x+y),3) for x,y in zip(mag_win, mag_lose)]
#mag['wins'] = mag_win
#mag['loses'] = mag_lose
mag_play = [round((x+y)/matches.shape[0], 3) for x,y in zip(mag_win, mag_lose)]
mag['playrate'] = mag_play
mag['winrate'] = mag_wr
mag = mag.set_index('key')

spp_win = []
spp_lose = []
for i in range(spp.shape[0]):
    champ_key = spp.iloc[i]['key']
    wins = matches[(((matches['Player_1_pick'] == champ_key) | (matches['Player_2_pick'] == champ_key) |
                   (matches['Player_3_pick'] == champ_key) | (matches['Player_4_pick'] == champ_key) |
                   (matches['Player_5_pick'] == champ_key)) & ((matches['teamVictory'] == 100))) |
                   (((matches['Player_6_pick'] == champ_key) | (matches['Player_7_pick'] == champ_key) |
                   (matches['Player_8_pick'] == champ_key) | (matches['Player_9_pick'] == champ_key) |
                   (matches['Player_10_pick'] == champ_key)) & ((matches['teamVictory'] == 200)))]
    loses = matches[(((matches['Player_1_pick'] == champ_key) | (matches['Player_2_pick'] == champ_key) |
                   (matches['Player_3_pick'] == champ_key) | (matches['Player_4_pick'] == champ_key) |
                   (matches['Player_5_pick'] == champ_key)) & ((matches['teamVictory'] == 200))) |
                   (((matches['Player_6_pick'] == champ_key) | (matches['Player_7_pick'] == champ_key) |
                   (matches['Player_8_pick'] == champ_key) | (matches['Player_9_pick'] == champ_key) |
                   (matches['Player_10_pick'] == champ_key)) & ((matches['teamVictory'] == 100)))]
    spp_win.append(wins.shape[0])
    spp_lose.append(loses.shape[0])
spp_wr = [round(x/(x+y),3) for x,y in zip(spp_win, spp_lose)]
#spp['wins'] = spp_win
#spp['loses'] = spp_lose
spp_play = [round((x+y)/matches.shape[0], 3) for x,y in zip(spp_win, spp_lose)]
spp['playrate'] = spp_play
spp['winrate'] = spp_wr
spp = spp.set_index('key')

mrk_win = []
mrk_lose = []
for i in range(mrk.shape[0]):
    champ_key = mrk.iloc[i]['key']
    wins = matches[(((matches['Player_1_pick'] == champ_key) | (matches['Player_2_pick'] == champ_key) |
                   (matches['Player_3_pick'] == champ_key) | (matches['Player_4_pick'] == champ_key) |
                   (matches['Player_5_pick'] == champ_key)) & ((matches['teamVictory'] == 100))) |
                   (((matches['Player_6_pick'] == champ_key) | (matches['Player_7_pick'] == champ_key) |
                   (matches['Player_8_pick'] == champ_key) | (matches['Player_9_pick'] == champ_key) |
                   (matches['Player_10_pick'] == champ_key)) & ((matches['teamVictory'] == 200)))]
    loses = matches[(((matches['Player_1_pick'] == champ_key) | (matches['Player_2_pick'] == champ_key) |
                   (matches['Player_3_pick'] == champ_key) | (matches['Player_4_pick'] == champ_key) |
                   (matches['Player_5_pick'] == champ_key)) & ((matches['teamVictory'] == 200))) |
                   (((matches['Player_6_pick'] == champ_key) | (matches['Player_7_pick'] == champ_key) |
                   (matches['Player_8_pick'] == champ_key) | (matches['Player_9_pick'] == champ_key) |
                   (matches['Player_10_pick'] == champ_key)) & ((matches['teamVictory'] == 100)))]
    mrk_win.append(wins.shape[0])
    mrk_lose.append(loses.shape[0])
mrk_wr = [round(x/(x+y),3) for x,y in zip(mrk_win, mrk_lose)]
#mrk['wins'] = mrk_win
#mrk['loses'] = mrk_lose
mrk_play = [round((x+y)/matches.shape[0], 3) for x,y in zip(mrk_win, mrk_lose)]
mrk['playrate'] = mrk_play
mrk['winrate'] = mrk_wr
mrk = mrk.set_index('key')

tnk_win = []
tnk_lose = []
for i in range(tnk.shape[0]):
    champ_key = tnk.iloc[i]['key']
    wins = matches[(((matches['Player_1_pick'] == champ_key) | (matches['Player_2_pick'] == champ_key) |
                   (matches['Player_3_pick'] == champ_key) | (matches['Player_4_pick'] == champ_key) |
                   (matches['Player_5_pick'] == champ_key)) & ((matches['teamVictory'] == 100))) |
                   (((matches['Player_6_pick'] == champ_key) | (matches['Player_7_pick'] == champ_key) |
                   (matches['Player_8_pick'] == champ_key) | (matches['Player_9_pick'] == champ_key) |
                   (matches['Player_10_pick'] == champ_key)) & ((matches['teamVictory'] == 200)))]
    loses = matches[(((matches['Player_1_pick'] == champ_key) | (matches['Player_2_pick'] == champ_key) |
                   (matches['Player_3_pick'] == champ_key) | (matches['Player_4_pick'] == champ_key) |
                   (matches['Player_5_pick'] == champ_key)) & ((matches['teamVictory'] == 200))) |
                   (((matches['Player_6_pick'] == champ_key) | (matches['Player_7_pick'] == champ_key) |
                   (matches['Player_8_pick'] == champ_key) | (matches['Player_9_pick'] == champ_key) |
                   (matches['Player_10_pick'] == champ_key)) & ((matches['teamVictory'] == 100)))]
    tnk_win.append(wins.shape[0])
    tnk_lose.append(loses.shape[0])
tnk_wr = [round(x/(x+y),3) for x,y in zip(tnk_win, tnk_lose)]
#tnk['wins'] = tnk_win
#tnk['loses'] = tnk_lose
tnk_play = [round((x+y)/matches.shape[0], 3) for x,y in zip(tnk_win, tnk_lose)]
tnk['playrate'] = tnk_play
tnk['winrate'] = tnk_wr
tnk = tnk.set_index('key')

asn_win = []
asn_lose = []
for i in range(asn.shape[0]):
    champ_key = asn.iloc[i]['key']
    wins = matches[(((matches['Player_1_pick'] == champ_key) | (matches['Player_2_pick'] == champ_key) |
                   (matches['Player_3_pick'] == champ_key) | (matches['Player_4_pick'] == champ_key) |
                   (matches['Player_5_pick'] == champ_key)) & ((matches['teamVictory'] == 100))) |
                   (((matches['Player_6_pick'] == champ_key) | (matches['Player_7_pick'] == champ_key) |
                   (matches['Player_8_pick'] == champ_key) | (matches['Player_9_pick'] == champ_key) |
                   (matches['Player_10_pick'] == champ_key)) & ((matches['teamVictory'] == 200)))]
    loses = matches[(((matches['Player_1_pick'] == champ_key) | (matches['Player_2_pick'] == champ_key) |
                   (matches['Player_3_pick'] == champ_key) | (matches['Player_4_pick'] == champ_key) |
                   (matches['Player_5_pick'] == champ_key)) & ((matches['teamVictory'] == 200))) |
                   (((matches['Player_6_pick'] == champ_key) | (matches['Player_7_pick'] == champ_key) |
                   (matches['Player_8_pick'] == champ_key) | (matches['Player_9_pick'] == champ_key) |
                   (matches['Player_10_pick'] == champ_key)) & ((matches['teamVictory'] == 100)))]
    asn_win.append(wins.shape[0])
    asn_lose.append(loses.shape[0])
asn_wr = [round(x/(x+y),3) for x,y in zip(asn_win, asn_lose)]

#asn['wins'] = asn_win
#asn['loses'] = asn_lose
asn_play = [round((x+y)/matches.shape[0], 3) for x,y in zip(asn_win, asn_lose)]
asn['playrate'] = asn_play
asn['winrate'] = asn_wr
asn = asn.set_index('key')

from google.colab import files

fig.to_csv('Fighter.csv') 
files.download('Fighter.csv')

mag.to_csv('Mage.csv') 
files.download('Mage.csv')

spp.to_csv('Support.csv') 
files.download('Support.csv')

mrk.to_csv('Marksman.csv') 
files.download('Marksman.csv')

tnk.to_csv('Tank.csv') 
files.download('Tank.csv')

asn.to_csv('Assassin.csv') 
files.download('Assassin.csv')

asn.head(480)

fig